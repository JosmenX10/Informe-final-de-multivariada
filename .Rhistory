theme_classic() + scale_colour_manual(values = c("#fdae61","grey"))
(g.pc1 + g.pc2)/(g.pc3 + g.pc4)
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental[,c(-15)]))
#pca <- prcomp(datos_bio1)
coord.amb2 <- as.data.frame(pca2$rotation[,1:2])    # Dos primeros ejes
coord.amb2$amb <- rownames(coord.amb2)         # Insertar columna con nombres de las especies
fviz_contrib(pca2,choice="var",axes=1)
fviz_contrib(pca2,choice="var",axes=2)
#| label: fig-fig1
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="original",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#| label: fig-fig16
#| fig-cap: "Análisis de escalamiento no metrico: Variación de la riqueza y composición entre los tipos de vegetación."
ggplot() +
# Sitios
geom_point(data = coord.sit,aes(NMDS1,NMDS2,colour=grp),size=2)+
scale_shape_manual(values = c(21:25))+
# Factor
geom_mark_ellipse(data=coord.sit, aes(x=NMDS1,y=NMDS2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
theme_classic() +
scale_colour_manual(values = c("#fc8d59","#af8dc3","#d8b365","#1a9850")) +
# Ambiental . significativo
geom_segment(data = coord.amb.sig,aes(x = 0, y = 0, xend = NMDS1*3, yend = NMDS2*3),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.3,colour = "blue")+
geom_text_repel(data = coord.amb.sig,aes(NMDS1*3,NMDS2*3,label=row.names(coord.amb.sig)),colour = "blue", size = 3) +
# Ambiental . no significativo
geom_segment(data = coord.amb.nsig,aes(x = 0, y = 0, xend = NMDS1*3, yend = NMDS2*3),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.3,colour = "#3f007d")+
geom_text_repel(data = coord.amb.nsig,aes(NMDS1*3,NMDS2*3,label=row.names(coord.amb.nsig)),colour = "#3f007d", size = 3) +
labs(color = "Tipos de vegetación", shape = "Tipos de vegetación", fill = "Tipos de vegetación", subtitle = paste0("Stress = ",round(spe.mds$stress,3)*100,"%")) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.esp,aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
arrow = arrow(angle=0,length = unit(0,"cm"),
type = "closed"),linetype=0, size=0,colour = "red")+
geom_text_repel(data = coord.esp,aes(NMDS1,NMDS2,label=especies),colour = "red",size = 2,   max.overlaps = getOption("ggrepel.max.overlaps", default = 400))
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental[,c(-15)]))
#pca <- prcomp(datos_bio1)
coord.amb2 <- as.data.frame(pca2$rotation[,1:2])    # Dos primeros ejes
coord.amb2$amb <- rownames(coord.amb2)         # Insertar columna con nombres de las especies
fviz_contrib(pca2,choice="var",axes=1)
#| label: fig-fig2
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
choose.files()
choose.dir()
include_graphics("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada/Graficos/Excel/Tipos de suelo.svg")
include_graphics("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada/Graficos/Excel/Tipos de suelo.svg")
include_graphics("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada/Graficos/Excel/Tipos de suelo.svg")
#| label: fig-fig4
#| fig-cap: Análisis por componentes principales a partir de los dos primeros ejes. A) Elipses para suelos de tipos fluvisol; B) Elipses para suelos de tipo cambisol; C) Elipsse para Líticos; D) Elipses para suelos de tipo esqueletico.
ambiental$factores <- factores[,4]
#Fluvisoles
Factor <- na.omit(cbind(ambiental,ambiental$factores))$FLUVISOL
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc1 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#91cf60","grey"))
#-----------------------------------------------------------------------------------------#
#Cambisoles
ambiental$factores <- factores[,3]
Factor <- cbind(ambiental,ambiental$factores)$CAMBISOL
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc2 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#99d594","grey"))
#------------------------------------------------------------------------------------------#
#Liticos
ambiental$factores <- factores[,1]
Factor <- cbind(ambiental,ambiental$factores)$LITHIC
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc3 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#d7191c","grey"))
#-------------------------------------------------------------------------------------
#Esqueleticos
ambiental$factores <- factores[,2]
Factor <- cbind(ambiental,ambiental$factores)$SKELETIC
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
# vista resumida de las coordenadas de sitios
g.pc4 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#fdae61","grey"))
(g.pc1 + g.pc2)/(g.pc3 + g.pc4)
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
library(tidyverse)
library(reshape)
library(vegan)
library(ggrepel)
library(ggExtra)
library(ggforce)
library(factoextra)
library(FactoMineR)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
# Preparamos la base de datos ambientales
colnames(datos_env) = c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO",
"Lítico","Esqueletico","Cambisoles","Fluvisoles","P.del suelo","pH",
"Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")
datos1 <- datos_env[,c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO","P.del suelo","pH")]
datos2 <- datos_env[,c("Lítico","Esqueletico","Cambisoles","Fluvisoles", "Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")]
datos_env <- cbind(datos1,datos2)
write.csv(datos_env,"vltava_env.csv")
row.names(datos_env) <- datos_env$Parcela
datos_env <- datos_env[,-1]
#| label: fig-fig1
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="original",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental[,c(-15)]))
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental[,c(-15)]))
setwd
setwd("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada")
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")
View(factores)
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")[,1:4]
View(factores)
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental))
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental))
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental))
View(ambiental)
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
library(tidyverse)
library(reshape)
library(vegan)
library(ggrepel)
library(ggExtra)
library(ggforce)
library(factoextra)
library(FactoMineR)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
# Preparamos la base de datos ambientales
colnames(datos_env) = c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO",
"Lítico","Esqueletico","Cambisoles","Fluvisoles","P.del suelo","pH",
"Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")
datos1 <- datos_env[,c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO","P.del suelo","pH")]
datos2 <- datos_env[,c("Lítico","Esqueletico","Cambisoles","Fluvisoles", "Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")]
datos_env <- cbind(datos1,datos2)
write.csv(datos_env,"vltava_env.csv")
row.names(datos_env) <- datos_env$Parcela
datos_env <- datos_env[,-1]
#| label: fig-fig1
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="original",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: "Resumen de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#PCA
#ambiental <- datos_env[,c(2,3,5,7:11,17:21)]
ambiental <- datos_env[,c(2,3,5,7:11,17:22)]
factores <- read_excel("Base de datos y contextos/vltava.xlsx",
sheet = "Condiciones de suelo")[,1:4]
#| label: fig-fig3
#| fig-cap: Contribución de cada variable a la variación reflejada en el primer componente principal.
pca2 <- prcomp(scale(ambiental))
#pca <- prcomp(datos_bio1)
coord.amb2 <- as.data.frame(pca2$rotation[,1:2])    # Dos primeros ejes
coord.amb2$amb <- rownames(coord.amb2)         # Insertar columna con nombres de las especies
fviz_contrib(pca2,choice="var",axes=1)
#| label: fig-fig4
#| fig-cap: Análisis por componentes principales a partir de los dos primeros ejes. A) Elipses para suelos de tipos fluvisol; B) Elipses para suelos de tipo cambisol; C) Elipsse para Líticos; D) Elipses para suelos de tipo esqueletico.
ambiental$factores <- factores[,4]
#Fluvisoles
Factor <- na.omit(cbind(ambiental,ambiental$factores))$FLUVISOL
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc1 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#91cf60","grey"))
#-----------------------------------------------------------------------------------------#
#Cambisoles
ambiental$factores <- factores[,3]
Factor <- cbind(ambiental,ambiental$factores)$CAMBISOL
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc2 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#99d594","grey"))
#------------------------------------------------------------------------------------------#
#Liticos
ambiental$factores <- factores[,1]
Factor <- cbind(ambiental,ambiental$factores)$LITHIC
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
g.pc3 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#d7191c","grey"))
#-------------------------------------------------------------------------------------
#Esqueleticos
ambiental$factores <- factores[,2]
Factor <- cbind(ambiental,ambiental$factores)$SKELETIC
coord.sit2 <- as.data.frame(pca2$x[,1:2])     # Coordenadas de los sitios
coord.sit2$sitio <- rownames(coord.sit2)      # Crear una columna con nombres de los sitios
coord.sit2$grp <-  factor(Factor)               # Adicionar columna de grupos por Epoca
# vista resumida de las coordenadas de sitios
g.pc4 <- ggplot() +
# Sitios
geom_point(data = coord.sit2,aes(PC1,PC2,colour=grp),size=4)+
scale_shape_manual(values = c(21:25)) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.amb2,aes(x = 0, y = 0, xend = PC1*9, yend = PC2*9),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.6,colour = "red") +
geom_text_repel(data = coord.amb2,aes(PC1*9,PC2*9,label=amb),colour = "red", max.overlaps =  getOption("ggrepel.max.overlaps", default = 12)) +
geom_mark_ellipse(data=coord.sit2,aes(x=PC1,y=PC2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
labs(color = "Tipo de suelo", shape = "Tipo de suelo", fill = "Tipo de suelo",
x = paste0("PC1 (",round(summary(pca2)$importance[2,1]*100,digits = 1),"%)"), y = paste0("PC2 (",round((summary(pca2)$importance[2,2]*100),digits = 1),"%)") ) +
theme_classic() + scale_colour_manual(values = c("#fdae61","grey"))
(g.pc1 + g.pc2)/(g.pc3 + g.pc4)
#| label: fig-fig15
#| fig-cap: "Relación entre la cobertura de la especie Abies alba con respecto a la variable de la luz."
f1 <- ggplot(datos_g,aes(x = Luz, y = Abiealb1)) +
geom_smooth(method = "loess",se = F, span = 1) +
geom_smooth(method = "lm",se = F, col = "red") +
geom_point(aes(colour = factor(Grupos))) +
theme_classic() +
scale_color_manual(values = c("1" = "#d73027","2"="blue","3"="#1a9850", "4" = "#c51b8a")) +
scale_y_continuous(limits = c(0,75)) +
labs(x = "Luz", y = "cobertura de Abies alba(%)")
f1
#| label: fig-fig16
#| fig-cap: "Análisis de escalamiento no metrico: Variación de la riqueza y composición entre los tipos de vegetación."
ggplot() +
# Sitios
geom_point(data = coord.sit,aes(NMDS1,NMDS2,colour=grp),size=2)+
scale_shape_manual(values = c(21:25))+
# Factor
geom_mark_ellipse(data=coord.sit, aes(x=NMDS1,y=NMDS2,group=grp,
colour=grp),alpha= 1, size = 1)  +
geom_hline(yintercept=0,linetype=3,size=1) +
geom_vline(xintercept=0,linetype=3,size=1) +
theme_classic() +
scale_colour_manual(values = c("#fc8d59","#af8dc3","#d8b365","#1a9850")) +
# Ambiental . significativo
geom_segment(data = coord.amb.sig,aes(x = 0, y = 0, xend = NMDS1*3, yend = NMDS2*3),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.3,colour = "blue")+
geom_text_repel(data = coord.amb.sig,aes(NMDS1*3,NMDS2*3,label=row.names(coord.amb.sig)),colour = "blue", size = 3) +
# Ambiental . no significativo
geom_segment(data = coord.amb.nsig,aes(x = 0, y = 0, xend = NMDS1*3, yend = NMDS2*3),
arrow = arrow(angle=22.5,length = unit(0.25,"cm"),
type = "closed"),linetype=1, size=0.3,colour = "#3f007d")+
geom_text_repel(data = coord.amb.nsig,aes(NMDS1*3,NMDS2*3,label=row.names(coord.amb.nsig)),colour = "#3f007d", size = 3) +
labs(color = "Tipos de vegetación", shape = "Tipos de vegetación", fill = "Tipos de vegetación", subtitle = paste0("Stress = ",round(spe.mds$stress,3)*100,"%")) +
# Taxones  *valores de cero para caracteres de las flechas (arrow)
geom_segment(data = coord.esp,aes(x = 0, y = 0, xend = NMDS1, yend = NMDS2),
arrow = arrow(angle=0,length = unit(0,"cm"),
type = "closed"),linetype=0, size=0,colour = "red")+
geom_text_repel(data = coord.esp,aes(NMDS1,NMDS2,label=especies),colour = "red",size = 2,   max.overlaps = getOption("ggrepel.max.overlaps", default = 400))
#| label: fig-fig5
#| fig-cap: Condiciones ambientales asociadas a los tipos de suelos.A) Porcentaje de incidencia del suelo lítico según el tipo de superficie; B) Porcentaje de incidencia del suelo esqueletico; C)  Porcentaje de incidencia del suelo cambisol; D) Porcentaje de incidencia del suelo esqueletico
include_graphics("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada/Graficos/Excel/Tipos de suelo.svg")
#| label: fig-fig5
#| fig-cap: Condiciones ambientales asociadas a los tipos de suelos.A) Porcentaje de incidencia del suelo lítico según el tipo de superficie; B) Porcentaje de incidencia del suelo esqueletico; C)  Porcentaje de incidencia del suelo cambisol; D) Porcentaje de incidencia del suelo fluvisol; E)Comparación del indice de humedad; F) Comparación del indice de nutriente.
include_graphics("C:/Users/Asus/Desktop/Analisis multivariado/Informe-final-de-multivariada/Graficos/Excel/Tipos de suelo.svg")
