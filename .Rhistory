labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y = "Fosforo total (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="Sustancia sólida suspendida (vol. %)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
View(Datos)
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
str(datos_bio)
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
str(datos_bio)
# Preparamos la base de datos ambientales
colnames(datos_env) = c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO",
"Lítico","Esqueletico","Cambisoles","Fluvisoles","P.del suelo","pH",
"Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")
datos1 <- datos_env[,c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO","P.del suelo","pH")]
datos2 <- datos_env[,c("Lítico","Esqueletico","Cambisoles","Fluvisoles", "Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")]
datos_env <- cbind(datos1,datos2)
write.csv(datos_env,"vltava_env.csv")
row.names(datos_env) <- datos_env$Parcela
datos_env <- datos_env[,-1]
str(datos_env)
#| label: fig-fig1
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="AOE",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: Diagrama de dispersión de las variables de orientación y capacidad calorífica. A) Relación entre orientación Sur con la orientación Sur-Sureste. B)Relación entre el indice de capacidad calorífica.
g1 = ggplot(datos_env, aes(x = Orientación.SE , y = Orientación.S.SE)) +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Orientación Sureste",y= "Orientación S-SE" , tag = "A)") +
theme_classic()
g2 = ggplot(datos_env, aes(x = CCSE , y = CCS.SE)) +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Indice de CC sureste", y = "Indice de CC S-SE", tag = "B)") +
theme_classic()
g1/g2
#| label: fig-fig4
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes entre distintos tipos de superficie en las parcelas según el eje a favor de la pendiente."
g3 = ggplot(datos_env,aes(x=factor(Superficie.PD),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Superficie.PD)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
g3
#| label: fig-fig5
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes para las parcelas en suelos líticos y no líticos."
g4 = ggplot(datos_env,aes(x=factor(Lítico),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Lítico)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Lítico", "0" = "No Litico")) + labs(x = "Condición del lítica del suelo")
g4
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
str(datos_bio)
# Preparamos la base de datos ambientales
colnames(datos_env) = c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO",
"Lítico","Esqueletico","Cambisoles","Fluvisoles","P.del suelo","pH",
"Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")
datos1 <- datos_env[,c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO","P.del suelo","pH")]
datos2 <- datos_env[,c("Lítico","Esqueletico","Cambisoles","Fluvisoles", "Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")]
datos_env <- cbind(datos1,datos2)
write.csv(datos_env,"vltava_env.csv")
row.names(datos_env) <- datos_env$Parcela
datos_env <- datos_env[,-1]
str(datos_env)
#| label: fig-fig1
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="AOE",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: Diagrama de dispersión de las variables de orientación y capacidad calorífica. A) Relación entre orientación Sur con la orientación Sur-Sureste. B)Relación entre el indice de capacidad calorífica.
g1 = ggplot(datos_env, aes(x = Orientación.SE , y = Orientación.S.SE)) +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Orientación Sureste",y= "Orientación S-SE" , tag = "A)") +
theme_classic()
g2 = ggplot(datos_env, aes(x = CCSE , y = CCS.SE)) +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Indice de CC sureste", y = "Indice de CC S-SE", tag = "B)") +
theme_classic()
g1/g2
#| label: fig-fig3
#| fig-cap: "Diagrama explicativo de las mediciones de orientación."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Explicaciones\\Orientación.svg")
#| label: fig-fig4
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes entre distintos tipos de superficie en las parcelas según el eje a favor de la pendiente."
g3 = ggplot(datos_env,aes(x=factor(Superficie.PD),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Superficie.PD)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
g3
#| label: fig-fig5
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes para las parcelas en suelos líticos y no líticos."
g4 = ggplot(datos_env,aes(x=factor(Lítico),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Lítico)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Lítico", "0" = "No Litico")) + labs(x = "Condición del lítica del suelo")
g4
#| label: fig-fig6
#| fig-cap: "histograma para comparar las frecuencias de las parcelas con distintos tipos de superficie según el eje a favor de la pendiente y si presenta o no el tipo de suelo lítico."
Sup.pd <- factor(datos_env$Superficie.PD, levels = c(1, 0, -1), labels = c("Convexo", "Neutro", "Cóncavo"))
Pendiente.pd <- factor(datos_env$Lítico, levels = c(1, 0), labels = c("Lítico", "No Lítico"))
factores <- paste(Sup.pd,Pendiente.pd, sep ="-")
je <- c("Cóncavo-No Lítico", "Cóncavo-Lítico","Neutro-No Lítico","Neutro-Lítico","Convexo-No Lítico" , "Convexo-Lítico")
datos_env$factores <- factor(factores, levels = je)
frecuencia_factores <- as.data.frame(table(datos_env$factores))
frecuencia <- frecuencia_factores$Freq
barplot(frecuencia,
main = "Comparación frecuencias de relieves y suelos líticos",
ylab = "Frecuencia",
col = rep(c("blue","orange"), times = 3),
border = "black", cex.names = 0.7,width = 2.5, names.arg = je, space = 1)
#| label: fig-fig7
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#| label: fig-fig8
#| fig-cap: "Diagrama de dispersión de las variables topográficas y topolagicas contra los indices de Hellinberg.A) Relación entre continentalidad, temperatura y luz con la orientación sur-sureste. B) Relación entre humedad, reactividad y nutrientes con la orientación sur-sureste, C)Relación entre continentalidad, temperatura y luz con la capacidad calorifica sur-sureste. D)Relación entre humedad, reactividad y nutrientes con la capacidad calorifica sur-sureste, E)Relación entre humedad, reactividad y nutrientes con el pH diluido de las muestras de suelo. F)Relación entre humedad, reactividad y nutrientes con la pendiente de la parcela."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Ellenberg vs ambientales.svg")
#| label: fig-fig9
#| fig-cap: "Diagrama de cajas y bigotes para comparar los indices de Hellinberg en distintas condiciones topográficas.A)Comparación del indice de humedad entre distintos tipos de superficie.B)Comparación del indice de nutrientes entre distintos tipos de superficie.C)Comparación del indice de humedad entre suelos líticos y no líticos."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Boxplot_ Ellenberg vs ambientales.svg")
dirección <- ifelse((datos_env$Orientación.S.SE-datos_env$Orientación.SE < 0),yes = datos_env$Orientación.SE*-1 , no = datos_env$Orientación.SE)
# Crear el gráfico
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Grupos)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
dirección <- ifelse((datos_env$Orientación.S.SE-datos_env$Orientación.SE < 0),yes = datos_env$Orientación.SE*-1 , no = datos_env$Orientación.SE)
# Crear el gráfico
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Grupos)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
f3 = ggplot(datos_env,aes(x=factor(Datos$datos_),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Superficie.PD)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f3
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Superficie.PD)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f3
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f3
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(datos_env$`P.del suelo`)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f3
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(datos_env$`P.del suelo`)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f1
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f1
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de relieve a lo largo de la pendiente")
f1
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades")
f1
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f1
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
#| label: fig-fig3
#| fig-cap: Correlograma - Indices de correlación de pearson entre las variables explicativas con las variables físico-químicas. Las elipses azules respresentan las relaciones lineales positivas y la rojas relaciones lineales negativas.
m <- cor(y=Datos[,c(3:11,13:17,21)], x =Datos[,c(12,18:20)],method = "pearson")
#| label: fig-fig5
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes para las parcelas en suelos líticos y no líticos."
g4 = ggplot(datos_env,aes(x=factor(Lítico),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Lítico)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Lítico", "0" = "No Litico")) + labs(x = "Condición del lítica del suelo")
g4
#| label: fig-fig1
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="original",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
(f1 + f2)/(f3+f4)/(f5+f6)
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
(f1 + f2)/(f3+f4)/(f5+f6)
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad")
(f1 + f2)/(f3+f4)/(f5+f6)
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Superficie.PD)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Superficie.ISO)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Lítico)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
View(datos_env)
View(datos_env)
