#| label: fig-fig7
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#| label: fig-fig8
#| fig-cap: "Diagrama de dispersión de las variables topográficas y topolagicas contra los indices de Hellinberg.A) Relación entre continentalidad, temperatura y luz con la orientación sur-sureste. B) Relación entre humedad, reactividad y nutrientes con la orientación sur-sureste, C)Relación entre continentalidad, temperatura y luz con la capacidad calorifica sur-sureste. D)Relación entre humedad, reactividad y nutrientes con la capacidad calorifica sur-sureste, E)Relación entre humedad, reactividad y nutrientes con el pH diluido de las muestras de suelo. F)Relación entre humedad, reactividad y nutrientes con la pendiente de la parcela."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Ellenberg vs ambientales.svg")
#| label: fig-fig9
#| fig-cap: "Diagrama de cajas y bigotes para comparar los indices de Hellinberg en distintas condiciones topográficas.A)Comparación del indice de humedad entre distintos tipos de superficie.B)Comparación del indice de nutrientes entre distintos tipos de superficie.C)Comparación del indice de humedad entre suelos líticos y no líticos."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Boxplot_ Ellenberg vs ambientales.svg")
dirección <- ifelse((datos_env$Orientación.S.SE-datos_env$Orientación.SE < 0),yes = datos_env$Orientación.SE*-1 , no = datos_env$Orientación.SE)
# Crear el gráfico
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Grupos)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad")
(f1 + f2)/(f3+f4)/(f5+f6)
#Seleccionamos las 15 especies más abundantes
Suma  <- data.frame(colSums(datos_bio))
Suma <- Suma %>% arrange(desc(Suma$colSums.datos_bio.))
fifteen_Species <- row.names(Suma)
fifteen_Species <- fifteen_Species[1:15]
fifteen_Species
datos_bio1 <- datos_bio[,fifteen_Species]
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.m = mean(value),   # Media de cada grupo del factor
datos.de  = sd(value),   # Desviacioes estándar de cada grupo
datos.var = var(value),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = sd(value)/sqrt(n()))   # Error estándar de cada grupo
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.m = mean(value),   # Media de cada grupo del factor
datos.de  = sd(value),   # Desviacioes estándar de cada grupo
datos.var = var(value),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = sd(value)/sqrt(n()))   # Error estándar de cada grupo
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "") + geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.de), width=.2,
position=position_dodge(.9))
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "") + geom_errorbar(aes(ymin=reorder(datos.m, -datos.m), ymax=datos.m+datos.de), width=.2,
position=position_dodge(.9))
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "") + geom_errorbar(aes(ymin=reorder(datos.m, -datos.m), ymax=reorder(datos.m, -datos.m) + reorder(datos.ee, -datos.m)), width=.2,
position=position_dodge(.9))
ggplot(datos_resum, aes(x=
)
)
datos_resum %>% arrange(desc(datos.m))
datos_resum %>% arrange(desc(datos.m))
ggplot(datos_resum, aes(x= datos.m , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "") + geom_errorbar(aes(ymin=reorder(datos.m, -datos.m),  , width=.2,
position=position_dodge(.9))
datos_resum %>% arrange(desc(datos.m))
ggplot(datos_resum, aes(x= datos.m , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "")
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "") + geom_errorbar(aes(ymin=reorder(datos.m, -datos.m),  , width=.2,
position=position_dodge(.9))
ggplot(datos_resum, aes(x=reorder(variable, -datos.m) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "")
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.sum = sum(value))   # Error estándar de cada grupo
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.m, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "Promedio de cobertura")
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "Promedio de cobertura")
View(datos_bio)
max(datos_g$Tilicor1)
![](Base%20de%20datos%20y%20contextos/diagrama_de_flujo.svg)
#Seleccionamos las 15 especies más abundantes
Suma  <- data.frame(colSums(datos_bio))
Suma <- Suma %>% arrange(desc(Suma$colSums.datos_bio.))
fifteen_Species <- row.names(Suma)
fifteen_Species <- fifteen_Species[1:15]
fifteen_Species
datos_bio1 <- datos_bio[,fifteen_Species]
#Transformamos los valores a m^2 de cobertura
datos_bio1 <- datos_bio1 * 150/100 #Area de cada parcela sobre el 100%
View(datos_bio)
View(datos_bio1)
#Seleccionamos las 15 especies más abundantes
Suma  <- data.frame(colSums(datos_bio))
Suma <- Suma %>% arrange(desc(Suma$colSums.datos_bio.))
fifteen_Species <- row.names(Suma)
fifteen_Species <- fifteen_Species[1:15]
fifteen_Species
datos_bio1 <- datos_bio[,fifteen_Species]
#Transformamos los valores a m^2 de cobertura
datos_bio1 <- datos_bio1 * 150/100 #Area de cada parcela sobre el 100%
datos_bio1 <- data.frame(datos_bio1)
datos_g <- cbind(datos_bio1,datos_env) #unimos con las variables ambientales
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
View(datos_g1)
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.sum = sum(value))   # Error estándar de cada grupo
datos_resum1 <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.sum = sum(value))
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.sum = sum(value))   # Error estándar de cada grupo
View(datos_resum)
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = "Cobertura total")
expression(x^2)
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste("Cobertura total(cm^2)", expression(x^2))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste(c("Cobertura total(cm^2)", expression(x^2)))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste(c("Cobertura total(cm^2)", expression(x^2)))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste(c("Cobertura total(cm^2)", expression(x^2))))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste(c("Cobertura total", expression(x^2))))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = paste(c("Cobertura total", expression(~cm^2))))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~cm^2))))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~cm^2)))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~cm^2))
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~(cm^2)))
ggplot(datos_g,aes(x = Luz, y = Abiealb1)) +
geom_smooth(method = "loess",se = F, span = 1) +
geom_smooth(method = "lm",se = F, col = "red") +
geom_point(aes(colour = factor(Grupos))) +
theme_classic() +
scale_color_manual(values = c("1" = "#d73027","2"="blue","3"="#1a9850", "4" = "#c51b8a")) +
scale_y_continuous(limits = c(0,75))
labs(x = "Luz", y = "Ancho del pétalo")
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~(m^2)))
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad") + labs(tag = "D)")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad")
(f1 + f2)/(f3+f4)/(f5+f6)
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz", tag = "A)")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes", tag = "B)"))
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz", tag = "A)")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes", tag = "B)")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura", tag = "c)")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad", tag = "D)")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad", tag = "E)")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad", tag = "F)")
(f1 + f2)/(f3+f4)/(f5+f6)
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz", tag = "A)")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes", tag = "B)")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura", tag = "c)")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad", tag = "D)")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad", tag = "E)")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad", tag = "F)")
(f1 + f2)/(f3+f4)/(f5+f6)
m <- cor(y = datos_bio1, x = ellin , method = "spearman") #correlación entre topográficas.
corrplot(m,method = "ellipse", order ="original",tl.col = "black",addCoef.col= T, cl.pos = T,pch.cex = 0.5, pch.col ="black",tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,addgrid.col = "#f5f5f5")
library(psych)
library(readxl)
library(ellipse)
library(corrplot)
library(Hmisc)
library(ggplot2)
library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
library(tidyverse)
library(reshape)
datos_env <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-env data")
datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Base de datos y contextos\\vltava.xlsx",
sheet = "Vltava-species")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
write.csv(datos_bio,file = "datos_bio.csv")
str(datos_bio)
# Preparamos la base de datos ambientales
colnames(datos_env) = c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO",
"Lítico","Esqueletico","Cambisoles","Fluvisoles","P.del suelo","pH",
"Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")
datos1 <- datos_env[,c("Parcela","Transecto","Elevación","Pendiente","Orientación.SE",
"Orientación.S.SE", "CCSE","CCS.SE","Superficie.PD","Superficie.ISO","P.del suelo","pH")]
datos2 <- datos_env[,c("Lítico","Esqueletico","Cambisoles","Fluvisoles", "Cobertura veg.","Luz","Temperatura","Continentalidad","Humedad",
"Reactividad","Nutrientes","Riqueza sp","Grupos")]
datos_env <- cbind(datos1,datos2)
write.csv(datos_env,"vltava_env.csv")
row.names(datos_env) <- datos_env$Parcela
datos_env <- datos_env[,-1]
str(datos_env)
#| label: fig-fig1
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos (* = 0.05, ** = 0.01, 0.001 = ***)."
#Seleccionamos entre grupos de variables
topo <- datos_env[,2:15]#Seleccionamos solamente las variables topográficas y de suelo.
ellin <- datos_env[,c(17:22)]#seleccionamos solo las variables indices-ellinger.
riqueza_cob <- datos_env[,c(16,23)]
#-----------------------------------------------------------------------
#Generamos las matrices de correlación para analisis
topocor <- cor(topo, method = "spearman") #correlación entre topográficas.
pval_topo <- corr.test(topo, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
ellin_topocor <- cor(y = topo, x = ellin, method = "spearman") #correlación entre topográficas.
pval_ellin<- corr.test(y= topo, x= ellin, adjust="none",method = "spearman")$p #p-value de correlaciones entre topográficas.
corrplot(topocor,method = "ellipse",type ="lower",diag = FALSE,
tl.pos = "ld",order ="original",tl.col = "black",addCoef.col= NULL, cl.pos = T, sig.level = c(0.001,0.01,0.05),
p.mat = pval_topo,insig = c("label_sig"), pch= "*",pch.cex = 0.5, pch.col ="black",
tl.cex = 1.0, number.cex = 0.9, cl.cex = 0.8,tl.srt = 50,addgrid.col = "#f5f5f5")
#| label: fig-fig2
#| fig-cap: Diagrama de dispersión de las variables de orientación y capacidad calorífica. A) Relación entre orientación Sur con la orientación Sur-Sureste. B)Relación entre el indice de capacidad calorífica.
g1 = ggplot(datos_env, aes(x = Orientación.SE , y = Orientación.S.SE)) +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = Orientación.SE, y = Orientación.S.SE), se = F, span = 1, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Orientación Sureste",y= "Orientación S-SE" , tag = "A)") +
theme_classic()
g2 = ggplot(datos_env, aes(x = CCSE , y = CCS.SE)) +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, span = 1, col = "blue") +
geom_smooth(aes(x = CCSE, y = CCS.SE), se = F, col = "green", method = "glm") +
geom_point(col = "orange") + labs(x = "Indice de CC sureste", y = "Indice de CC S-SE", tag = "B)") +
theme_classic()
g1/g2
#| label: fig-fig3
#| fig-cap: "Diagrama explicativo de las mediciones de orientación."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Explicaciones\\Orientación.svg")
#| label: fig-fig4
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes entre distintos tipos de superficie en las parcelas según el eje a favor de la pendiente."
g3 = ggplot(datos_env,aes(x=factor(Superficie.PD),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Superficie.PD)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Convexo", "0" = "Neutro", "-1" = "Concavo")) +
labs( x = "Tipos de relieve a lo largo de la pendiente")
g3
#| label: fig-fig5
#| fig-cap: "Diagrama de cajas y bigotes para comparar las altitudes para las parcelas en suelos líticos y no líticos."
g4 = ggplot(datos_env,aes(x=factor(Lítico),y=Elevación)) +
geom_boxplot(aes(y= Elevación, fill = factor(Lítico)), notch = TRUE) + theme_classic() +
guides(fill = "none") +   scale_x_discrete(labels = c("1" = "Lítico", "0" = "No Litico")) + labs(x = "Condición del lítica del suelo")
g4
#| label: fig-fig6
#| fig-cap: "histograma para comparar las frecuencias de las parcelas con distintos tipos de superficie según el eje a favor de la pendiente y si presenta o no el tipo de suelo lítico."
Sup.pd <- factor(datos_env$Superficie.PD, levels = c(1, 0, -1), labels = c("Convexo", "Neutro", "Cóncavo"))
Pendiente.pd <- factor(datos_env$Lítico, levels = c(1, 0), labels = c("Lítico", "No Lítico"))
factores <- paste(Sup.pd,Pendiente.pd, sep ="-")
je <- c("Cóncavo-No Lítico", "Cóncavo-Lítico","Neutro-No Lítico","Neutro-Lítico","Convexo-No Lítico" , "Convexo-Lítico")
datos_env$factores <- factor(factores, levels = je)
frecuencia_factores <- as.data.frame(table(datos_env$factores))
frecuencia <- frecuencia_factores$Freq
barplot(frecuencia,
main = "Comparación frecuencias de relieves y suelos líticos",
ylab = "Frecuencia",
col = rep(c("blue","orange"), times = 3),
border = "black", cex.names = 0.7,width = 2.5, names.arg = je, space = 1)
#| label: fig-fig7
#| fig-cap: "Correlograma de las relaciones de las variables topológicas y topográficas con los indices de Hellinberg usando el indice de correlación de Spearman: Los elipses azules inclinadas a la derecha representan las relaciones lineales positivas, mientras que las elipses rojas inclinadas a la izquierda representan las relaciones lineales negativas. El nivel de significancia se representa por medio de asteriscos(* = 0.05, ** = 0.01, 0.001 = ***)."
#|
corrplot(ellin_topocor,method = "ellipse",
tl.pos = "dt",tl.col = "black",sig.level = c(0.001,0.01,0.05),
p.mat = pval_ellin, insig = c("label_sig"), pch= "*",pch.cex = 1.0, pch.col ="black"
,tl.cex = 1.0, number.cex = 0.9,addgrid.col = "#f5f5f5")
#| label: fig-fig8
#| fig-cap: "Diagrama de dispersión de las variables topográficas y topolagicas contra los indices de Hellinberg.A) Relación entre continentalidad, temperatura y luz con la orientación sur-sureste. B) Relación entre humedad, reactividad y nutrientes con la orientación sur-sureste, C)Relación entre continentalidad, temperatura y luz con la capacidad calorifica sur-sureste. D)Relación entre humedad, reactividad y nutrientes con la capacidad calorifica sur-sureste, E)Relación entre humedad, reactividad y nutrientes con el pH diluido de las muestras de suelo. F)Relación entre humedad, reactividad y nutrientes con la pendiente de la parcela."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Ellenberg vs ambientales.svg")
#| label: fig-fig9
#| fig-cap: "Diagrama de cajas y bigotes para comparar los indices de Hellinberg en distintas condiciones topográficas.A)Comparación del indice de humedad entre distintos tipos de superficie.B)Comparación del indice de nutrientes entre distintos tipos de superficie.C)Comparación del indice de humedad entre suelos líticos y no líticos."
include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Informe-final-de-multivariada\\Graficos\\Excel\\Boxplot_ Ellenberg vs ambientales.svg")
#| label: fig-fig10
#| fig-cap: "Distribución de los tipos de emsamblajes vegetales en relación con la orientación y la altitud. El círculo central representa el fondo del valle, el margen exterior representa el borde superior del valle y la dirección desde el centro representa la dirección hacia la que se orientan las laderas. Los tipos de puntos corresponden a los tipos de vegetación."
dirección <- ifelse((datos_env$Orientación.S.SE-datos_env$Orientación.SE < 0),yes = datos_env$Orientación.SE*-1 , no = datos_env$Orientación.SE)
# Crear el gráfico
ggplot(datos_env) +
geom_point(aes(x = dirección, y = datos_env$Elevación, shape = factor(datos_env$Grupos), colour = factor(datos_env$Grupos)), size = 2.5) +
coord_polar(start = 2.35619 ,direction = 1) +  # Transforma el gráfico en circular
theme_minimal() +
labs(title = "Distribución de los TC en altitud y orientación",
x = "Orientación",
y = "Altitud", colour = "TC",shape ="TC") +
scale_x_continuous(limits = c(-180,180), breaks = c(-45,45,135,-135),
labels = c("O","N","E","S"), minor_breaks = c(-90,0,90,180)) + # Ejes con direcciones cardinales
theme(legend.position = "right") +
scale_y_continuous(limits = c(380, 540), breaks = c(400,425,450,475,500,525,550)) + # Dejar un espacio en el centro
theme_light()
#| label: fig-fig11
#| fig-cap: "Diagrama de cajas y bigotes con muescas que permite observar la variación de las variables topológicas y topográficas en los cuatro tipos de vegetación evaluados. A) Comparación del índice de luz entre los distintos tipos de vegetación. B) Comparación del índice de temperatura entre los distintos tipos de vegetación. C) Comparación de la continentalidad entre los distintos tipos de vegetación. D) Comparación del índice de nutrientes entre los distintos tipos de vegetación. E) Comparación del índice de humedad entre los distintos tipos de vegetación. F) Comparación del índice de reactividad entre los distintos tipos de vegetación."
f1 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Luz)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Luz", tag = "A)")
f2 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Nutrientes)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Nutrientes", tag = "B)")
f3 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Temperatura)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Temperatura", tag = "c)")
f4 = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Humedad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Humedad", tag = "D)")
f5  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Continentalidad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Continentalidad", tag = "E)")
f6  = ggplot(datos_env,aes(x=factor(datos_env$Grupos),y= datos_env$Reactividad)) +
geom_boxplot(aes(fill = factor(datos_env$Grupos)), notch = TRUE) + theme_classic() +
guides(fill = "none") +
labs( x = "Tipos de comunidades", y = "Reactividad", tag = "F)")
(f1 + f2)/(f3+f4)/(f5+f6)
#Seleccionamos las 15 especies más abundantes
Suma  <- data.frame(colSums(datos_bio))
Suma <- Suma %>% arrange(desc(Suma$colSums.datos_bio.))
fifteen_Species <- row.names(Suma)
fifteen_Species <- fifteen_Species[1:15]
fifteen_Species
datos_bio1 <- datos_bio[,fifteen_Species]
#Transformamos los valores a m^2 de cobertura
datos_bio1 <- datos_bio1 * 150/100 #Area de cada parcela sobre el 100%
datos_bio1 <- data.frame(datos_bio1)
datos_g <- cbind(datos_bio1,datos_env) #unimos con las variables ambientales
datos_g1 <- datos_g
datos_g1$Esqueletico <- factor(datos_g$Esqueletico, levels = c(1,0),labels = c("Esqueletico","No esqueletico"))
datos_g1$Lítico <- factor(datos_g$Lítico, levels = c(1,0),labels = c("Lítico","No Lítico"))
datos_g1$Fluvisoles <- factor(datos_g$Fluvisoles, levels = c(1,0),labels = c("Fluvisoles","No fluvisoles"))
datos_g1$Cambisoles <- factor(datos_g$Cambisoles, levels = c(1,0),labels = c("Cambisoles","No cambisoles"))
datos_g1$Grupos <- factor(datos_g$Grupos, levels = c(1,2,3,4))
datos_resum <- melt(datos_g1[,c(1:15,39)])
datos_resum <- datos_resum %>%        # Base de datos resumida
group_by(Grupos,variable)  %>%          # Factor o variable agrupadora
summarise(datos.sum = sum(value))   # Error estándar de cada grupo
#| label: fig-fig12
#| fig-cap: "Áreas de cobertura total de las especies más representativas en general y por cada tipo de ensamblaje en los valles profundos del río de Moldavia."
ggplot(datos_resum, aes(x=reorder(variable, -datos.sum) , y=datos.sum, fill = Grupos)) +
geom_bar(stat="identity",
position= "stack") +theme_classic() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + labs(x= "", y = expression("Cobertura total"~(m^2)))
#| label: fig-fig15
#| fig-cap: "Diagrama de dispersión de la relación entre la cobertura de la especie Abies alba con respecto a la variable de Luz."
ggplot(datos_g,aes(x = Luz, y = Abiealb1)) +
geom_smooth(method = "loess",se = F, span = 1) +
geom_smooth(method = "lm",se = F, col = "red") +
geom_point(aes(colour = factor(Grupos))) +
theme_classic() +
scale_color_manual(values = c("1" = "#d73027","2"="blue","3"="#1a9850", "4" = "#c51b8a")) +
scale_y_continuous(limits = c(0,75))
labs(x = "Luz", y = "Ancho del pétalo")
