axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOT (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
# Promedios y errores con colores automáticos (Figura p1)
p1<-
ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
theme_classic()+
labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOT (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(PO4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(PO4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(PO4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(PO4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(PO4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(PO4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(PO4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(PO4)/sqrt(n()),2))   # Error estándar de cada grupo
#| label: tbl-tbl1
#| tbl-cap: "Ejemplo de resumen estadistico por cada variable físico-química."
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(temp), 2),   # Media de cada grupo del factor
datos.de  = round(sd(temp),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(temp),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(temp)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum %>%
kbl(caption = "", booktabs = F, longtable=T) %>%
kable_classic(full_width=F, html_font = "cambria")
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(pH), 2),   # Media de cada grupo del factor
datos.de  = round(sd(pH),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(pH),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(pH)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(MOP), 2),   # Media de cada grupo del factor
datos.de  = round(sd(MOP),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(MOP),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(MOP)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Motot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Motot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Motot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Motot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(PO4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(PO4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(PO4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(PO4)/sqrt(n()),2))   # Error estándar de cada grupo
#| label: tbl-tbl1
#| tbl-cap: "Ejemplo de resumen estadistico de la temperatura por los niveles de altura y velocidad de corriente."
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(temp), 2),   # Media de cada grupo del factor
datos.de  = round(sd(temp),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(temp),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(temp)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum %>%
kbl(caption = "", booktabs = F, longtable=T) %>%
kable_classic(full_width=F, html_font = "cambria")
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(pH), 2),   # Media de cada grupo del factor
datos.de  = round(sd(pH),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(pH),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(pH)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(MOP), 2),   # Media de cada grupo del factor
datos.de  = round(sd(MOP),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(MOP),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(MOP)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Motot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Motot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Motot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Motot)/sqrt(n()),2))   # Error estándar de cada grupo
#| label: fig-fig7
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.
# Promedios y errores con colores automáticos (Figura p1)
p1<-
ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
theme_classic()+
labs(x="Nivel de VC", y ="pH", fill = "Nivel de altitud") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de VC", y ="pH", fill = "Nivel de altitud") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOT (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(PO4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(PO4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(PO4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(PO4)/sqrt(n()),2))   # Error estándar de cada grupo
# Promedios y errores con colores automáticos (Figura p1)
p1<-
ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
theme_classic()+
labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOT (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
#| label: fig-fig8
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(PO4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(PO4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(PO4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(PO4)/sqrt(n()),2))   # Error estándar de cada grupo
# Promedios y errores con colores automáticos (Figura p1)
p1<-
ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
theme_classic()+
labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y = "Fosforo total (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
#| label: fig-fig8
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.
datos_resum <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(O2),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum2 <- Datos %>%        # Base de datos resumida
group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(NH4),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum3 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum4 <- Datos %>%        # Base de datos resumida
group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
summarise(datos.m = round(mean(sólidos), 2),   # Media de cada grupo del factor
datos.de  = round(sd(sólidos),2),   # Desviacioes estándar de cada grupo
datos.var = round(var(sólidos),2),  # Varianzas de cada grupo
n = n(),           # Tamaño de cada grupo
datos.ee = round(sd(sólidos)/sqrt(n()),2))   # Error estándar de cada grupo
# Promedios y errores con colores automáticos (Figura p1)
p1<-
ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
theme_classic()+
labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
# Figura con definición de colores por periodo (figura p2)
p2 <-
ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
position=position_dodge(.9)) +
labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y = "Fosforo total (mg/l)", fill = "v. de caudal") +
theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) +
geom_bar(stat="identity", col="black", position=position_dodge()) +
geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
position=position_dodge(.9)) +
labs(x="Nivel de caudal", y ="Sustancia sólida suspendida (vol. %)", fill = "v. de caudal") +
theme_classic() +
scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
axis.title.x = element_text(size=10),       # Tamaño del título en eje X
axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
legend.title = element_text(size=9))        # Tamaño del título de la leyenda
(p1+p2)/(p3 + p4)
