setwd(choose.dir())

library(readxl)
Chengue <- read_excel(choose.files())

Gairaca <- read_excel(choose.files())

Q.rodriguez <- read_excel(choose.files())


Chengue$localidad <- rep("Chenge", nrow(Chengue))

Gairaca$localidad <- rep("Gairaca", nrow(Gairaca))

Q.rodriguez$localidad <- rep("Q.rodriguez", nrow(Q.rodriguez))

Datos <- rbind(Chengue,Gairaca,Q.rodriguez)


#---- Realizar el resumen estadistico de cada hora por localidad ---------
library(tidyr)
library(dplyr)


# Agrupar y resumir los datos por hora y localidad
resumen_diario <- Datos %>%
  group_by(localidad,Fecha,año,mes, dia) %>%
  summarise( `Temp(-6cm)` = mean(`Temp(-6cm)`),
    `Temp(+2cm)` = mean(`Temp(+2cm)`),
     `Temp(+15cm)` = mean(`Temp(+15cm)`),
    `%Hu/s` = mean(`%Hu/s`),
    .groups = 'drop')

#extraer datos---CAMBIAR PARAMETROS#

library(openxlsx)

write.xlsx(Datos,file = "Analisis diario_20-07-2024.xlsx")
#--------------------------------

#Crear formatos de fechas
library(scales)

#Creamos los labels para la representación grafica


resumen_diario$UTC <- as.POSIXlt(resumen_diario$Fecha, tz = "UTC", format= c("%Y.%m.%d"))
resumen_diario$UTC <- as.factor(resumen_diario$UTC)

library(openxlsx)
setwd(choose.dir())
write.xlsx(resumen_diario, file = "Analisis_diario_mes07.xlsx")

lineas_meses <- resumen_diario %>% filter(dia == "01") %>% select(UTC)

resumen_diario$Meses <- case_when(resumen_diario$mes == "01" ~ "Ene", resumen_diario$mes== "02" ~ "Feb", resumen_diario$mes== "03" ~"Mar",
                   resumen_diario$mes== "04" ~"Abr", resumen_diario$mes== "05" ~"May", resumen_diario$mes== "06" ~"Jun", resumen_diario$mes== "07" ~"Jul",
                   resumen_diario$mes== "08" ~"Ago", resumen_diario$mes== "09" ~"Sep", resumen_diario$mes== "10" ~"Oct", resumen_diario$mes== "11" ~"Nov",
                   resumen_diario$mes== "12" ~ "Dic")

fechas_meses <- resumen_diario %>% filter(dia == "17", localidad == "Gairaca") %>%  select(UTC,Meses,año) %>%  mutate(año_mes = paste(año, Meses, sep = "-"))

#----------------------------------Graficamos con ggplot2------------------------------------------
library(ggplot2)

#Grafico humedad
hu <- ggplot(resumen_diario, aes(x = UTC, y = `%Hu/s`)) +
  geom_line(aes(color = localidad, group = localidad, linetype = localidad), linewidth = 0.5) +
  labs(y = "Humedad (%)", x = NULL) +
  scale_color_manual(values = c("red", "green", "blue")) +  # Ajusta los colores
  scale_linetype_manual(values = c("dashed","dashed","dashed")) +
  geom_vline(xintercept = as.factor(lineas_meses$UTC), linetype = "dotted", color = "gray", linewidth = 1) +
   theme_minimal() +   guides(linetype = F) +   theme(
    panel.grid.major = element_blank(), # Quitar cuadriculas mayores
    panel.grid.minor = element_blank()  # Quitar cuadriculas menores
  , axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
  axis.line = element_line(color = "black", linewidth = 0.5)) + # Cambia el color y el grosor de ambas líneas de los ejes)
scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 5)]) + 
  annotate("text", x = fechas_meses$UTC, y = 40, label = fechas_meses$año_mes, size = 2, color = "blue")
  
#Grafico temperatura -6cm

temp1 <- ggplot(resumen_diario, aes(x = UTC, y = `Temp(-6cm)`)) +
  geom_line(aes(color = localidad, group = localidad, linetype = localidad), linewidth = 0.5) +
  labs(y = "Temperatura (-6cm)", x = NULL) +
  scale_color_manual(values = c("red", "green", "blue")) +  # Ajusta los colores
  scale_linetype_manual(values = c("dashed","dashed","dashed")) +
  geom_vline(xintercept = as.factor(lineas_meses$UTC), linetype = "dotted", color = "gray", linewidth = 1) +
  theme_minimal() +   guides(linetype = F) +   theme(
    panel.grid.major = element_blank(), # Quitar cuadriculas mayores
    panel.grid.minor = element_blank()  # Quitar cuadriculas menores
    , axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
    axis.line = element_line(color = "black", linewidth = 0.5)) + # Cambia el color y el grosor de ambas líneas de los ejes)
  scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 5)]) + 
  annotate("text", x = fechas_meses$UTC, y = 40, label = fechas_meses$año_mes, size = 2, color = "blue")

#Grafico temperatura +2cm

temp2 <- ggplot(resumen_diario, aes(x = UTC, y = `Temp(+2cm)` )) +
  geom_line(aes(color = localidad, group = localidad, linetype = localidad),linewidth = 0.5) +
  labs(y = "Temperatura (+2cm)", x = NULL) +
  scale_color_manual(values = c("red", "green", "blue")) +  # Ajusta los colores
  scale_linetype_manual(values = c("dashed","dashed","dashed")) +
  geom_vline(xintercept = as.factor(lineas_meses$UTC), linetype = "dotted", color = "gray", linewidth = 1) +
  theme_minimal() +   guides(linetype = F) +   theme(
    panel.grid.major = element_blank(), # Quitar cuadriculas mayores
    panel.grid.minor = element_blank()  # Quitar cuadriculas menores
    , axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
    axis.line = element_line(color = "black", linewidth = 0.5)) + # Cambia el color y el grosor de ambas líneas de los ejes)
  scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 5)]) + 
  annotate("text", x = fechas_meses$UTC, y = 40, label = fechas_meses$año_mes, size = 2, color = "blue")


  #Grafico temperatura +15cm
  
 temp3 <- ggplot(resumen_diario, aes(x = UTC, y = `Temp(+15cm)` )) +
           geom_line(aes(color = localidad, group = localidad, linetype = localidad),linewidth = 0.5) +
           labs(y = "Temperatura (+15cm)", x = NULL) +
           scale_color_manual(values = c("red", "green", "blue")) +  # Ajusta los colores
           scale_linetype_manual(values = c("dashed","dashed","dashed")) +
           geom_vline(xintercept = as.factor(lineas_meses$UTC), linetype = "dotted", color = "gray", linewidth = 1) +
           theme_minimal() +   guides(linetype = F) +   theme(
             panel.grid.major = element_blank(), # Quitar cuadriculas mayores
             panel.grid.minor = element_blank()  # Quitar cuadriculas menores
             , axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
             axis.line = element_line(color = "black", linewidth = 0.5)) + # Cambia el color y el grosor de ambas líneas de los ejes)
           scale_x_discrete(breaks = function(x) x[seq(1, length(x), by = 5)]) + 
           annotate("text", x = fechas_meses$UTC, y = 40, label = fechas_meses$año_mes, size = 2, color = "blue")

 #Paneles graficos
 library(gridExtra)
 grid.arrange(hu, temp1, temp2,temp3)
 


