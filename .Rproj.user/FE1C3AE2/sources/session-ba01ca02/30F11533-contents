---
title: "Taller Exploratorios en Excel y R"
date: last-modified #now #today
description: Exploración de bases de datos con dos o más variables. 
author: 
    name: Josué David Mendoza Hewitt
    url: https://grupogien.jimdofree.com/
    affiliation: Grupo de Investigación GIEN
    affiliation-url: https://grupogien.jimdofree.com/ 
title-block-banner: "#3BBDD9"
format: 
  html:
    toc: true                 # Barra de menú
    toc-title: Menú flotante  # Nombre de la barra de menú flotante
    code-tools: false         # Códigos descargables (activar con true)
    code-fold: true
    css: "stile-justify.css"  # Justificación del texto
lang: "ES-es"
---

# Introducción

## Pregunta

¿Pueden las condiciones físicoquímicas de los ríos de la sabana de Bogotá depender de los cambios en las condiciones altitudinales e hidrométricas en las cuencas de ríos de la sabana de Bogotá?

## Objetivos

-   Evaluar la variación en las variables altitudinales e hidrometricas entre las cuencas de la sabana de Bogotá.

-   Evaluar la relación entre la altitud y las variables hidrométricas con las variables físicoquímicas en los ríos de la sabana de Bogotá.

-   Determinar las diferencias en los parámetros físicoquímicos entre diferentes niveles de condiciones altitudinales e hidrométricas.

## Hipótesis

**Ho:** La variación en las condiciones físicoquímicas **no** se explica por un efecto de las variables hidrométricas y de altitud en las cuencas de la sabana de Bogotá.

**Ha:** La variación en las condiciones físicoquímicas se explica por un efecto de las variables hidrométricas y de altitud en las cuencas de la sabana de Bogotá.

------------------------------------------------------------------------

**Carga de librerias requeridas**

```{r,message=FALSE, warning=FALSE}
#| label: tbl-tbl1
#| tbl-cap: Resumen de datos crudos de variables ambientales de los ríos en las cuencas de la sabana de Bogotá.

library(ggplot2)
library(readxl)
library(corrplot)
library(knitr)
library(gridExtra)
library(ggplot2)
library(gridExtra)
library(grid)
library(patchwork)
library(kableExtra)
library(tidyverse)
library(reshape2)
library(ggrepel)
library(vegan)
library(factoextra)
library(ggsci)
library(ggforce)
library(concaveman)

```

**Carga de base de datos**

```{r,message=FALSE, warning=FALSE}
Datos <- read_xlsx("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Actividades\\Asignación exploratorios\\Ambiental.xlsx", sheet = "Ambiental")

head(Datos) %>% 
  kbl(caption =  "", booktabs = F, longtable = T) %>% 
  kable_classic(full_width = F, html_font = "cambria")

```

## **Objetivo 1:** Determinar la variación en las variables altitudinales e hidrometricas entre las cuencas de la sabana de Bogotá.

### **Distribución general de las variables explicativas (Altitud, caudal, variación de caudal y velocidad de corriente)**

A partir de @fig-fig1 se puede obser que altitud de los tramos de ríos muestrados varían aproximidamente entre 2400 y 3400 metros sobre el nivel del mar(MSNM), teniendo la mayoria de datos en valores de 2500 y 2800 MSNM. El caudal de los ríos mantiene valores que van desde los 0 L/s hasta los 6 L/s, estando la mayoria de los datos entre los valores de 0 a 2 L/s. En cuanto a la variación o cambio en el caudal los datos oscilan entre valores de 20 a 160% y la velocidad de corriente que oscila entre los valores de 10 a 80 m/s.

La @fig-fig1 también permite observar la distribución de los datos de las variables explicativas, de manera que se evidencia que tanto en la variable de altitud como la de caudal existe sesgo a la derecha concentrando la mayoria de datos en valores bajos de estas variables, mientras que el caudal muestra una repartición más homogenea entre las clases pero aun mantienendo cierto sesgo a la izquierda, y la velocidad de corriente mantiene una distribución más normal pero con un unico valor de 80 m/s que generaría cierto sesgo a la derecha.

```{r,message=FALSE, warning=FALSE}
#| label: fig-fig1
#| fig-cap: Distribución de las variables explicativas en la cuencas de la sabana de bogotá. 

par(mfrow = c(2,2))

hist(Datos$altitud, main = paste("Histograma de las altitudes", "(M.S.N.M)"), col = "orange",ylab = "Frecuencia", xlab = "Altitud (M.S.N.M)"
     )

hist(Datos$caudal, main = paste("Histograma de los caudales","(L/s)"), col = "blue",ylab = "Frecuencia", 
                                xlab = "Caudal (L/s)")

hist(Datos$`var-caudal`, main = paste("Histograma de var.de caudales","(%)"), col = "lightgreen",ylab = "Frecuencia", 
                                xlab = "Variablidad de caudal (%)")

hist(Datos$vel, main = "Histograma de vel. de corriente (m/s)", col = "red", ylab = "Frecuencia", 
                                xlab = "velocidad de corriente (m/s)")


```

### Comparación del promedio de las variables explicativas entre las cuencas muestreadas en la Sabana de Bogotá

\
En cuanto a la altura, el mayor promedio corresponde a la cuenca del Río Frío (2953 m s. n. m.), siendo muy similar a los promedios del Río Neusa (2980 m s. n. m.) y del Río Aves (2845 m s. n. m.). Sin embargo, estas tres cuencas presentan mayor variabilidad, como lo muestran las barras de error, cuyos valores extremos están definidos por el error estándar. Por otro lado, el Río Tunjuelito (2600 m s. n. m.) tiene el valor más bajo, seguido por las cuencas de los ríos Siecha, Teusacá y Susagua(@fig-fig2).

En cuanto al caudal, la cuenca del Río Neusa mantiene uno de los mayores promedios, con aproximadamente 2.2 L/s y una variación del 120%. Aunque las barras de error indican que el caudal no es significativamente mayor que en el resto de las cuencas, en términos de variabilidad, no habría solapamiento con otras cuencas, excepto con el Río Frío, cuyo promedio de variabilidad en el caudal es bastante cercano al del Río Neusa. A pesar de que el Río Susagua (0.9 L/s) tiene uno de los promedios más bajos en caudal, presenta el mayor promedio en velocidad de corriente (70 L/s).

```{r}
#| label: fig-fig2
#| fig-cap: Comparación de las variables explicativas en la cuencas de la sabana de bogotá.A)Altitud(m), B)Caudal(L/s) C)Variabilidad del caudal(%) y D)Velocidad de la corriente(m/s).

include_graphics("C:\\Users\\Asus\\Desktop\\Analisis multivariado\\Actividades\\Asignación exploratorios\\Graficos_excel.svg")
```

## **Objetivo 2:** Evaluar la relación entre la altitud y las variables hidrométricas con las variables físicoquímicas en los ríos de la sabana de Bogotá.

Las figuras @fig-fig3 y @fig-fig4 muestran correlogramas de las relaciones entre las variables explicativas y las variables físicoquímicas. Cada figura aplica un índice de correlación diferente, lo cual puede ser importante para detectar relaciones en función del cumplimiento o incumplimiento de ciertos supuestos. Se observa que la altitud presenta una correlación negativa fuerte con el pH y la temperatura al aplicar el índice de Pearson; sin embargo, al utilizar Spearman, el grado de correlación con el pH se debilita, y la correlación con la concentración de oxígeno se fortalece alcanzando a ser moderada. Lo mismo ocurre con la velocidad de corriente, que muestra una correlación positiva moderada tanto con el pH como con la temperatura cuando se usa Pearson, pero dicha correlación también se debilita al aplicar Spearman.

En el caso del caudal, sucede lo contrario: no muestra correlaciones moderadas con ninguna de las variables de respuesta al aplicar Pearson, pero al utilizar Spearman, la materia orgánica total y particulada revelan correlaciones positivas moderadas con el caudal. En cuanto a la variabilidad del caudal, no se observan cambios tan notables en las correlaciones; mantiene una correlación positiva con la materia orgánica total tanto con Pearson como con Spearman, aunque aumenta levemente con este último.

```{r,message=FALSE, warning=FALSE}
#| label: fig-fig3
#| fig-cap: Correlograma - Indices de correlación de pearson entre las variables explicativas con las variables físico-químicas. Las elipses azules respresentan las relaciones lineales positivas y la rojas relaciones lineales negativas.



m <- cor(y=Datos[,c(3:11,13:17,21)], x =Datos[,c(12,18:20)],method = "pearson")

corrplot(m, method ="ellipse", order = "original",
              , tl.pos = "lt",tl.col = "black"
               ,tl.cex = 0.9,number.cex = 0.45, addCoef.col = "black")

```

```{r,message=FALSE, warning=FALSE}
#| label: fig-fig4
#| fig-cap: Correlograma - Indices de correlación de Spearman entre las variables explicativas con las variables físico-químicas. Las elipses azules respresentan las relaciones lineales positivas y la rojas relaciones lineales negativas.

c <- cor(y=Datos[,c(3:11,13:17,21)], x =Datos[,c(12,18:20)],method = "spearman")

corrplot(c, method ="ellipse", order = "original",
              , tl.pos = "lt",tl.col = "black"
               ,tl.cex = 0.9,number.cex = 0.45, addCoef.col = "black")
```

La figura @fig-fig5 profundiza en las relaciones entre variables que alcanzan una correlación moderada o fuerte. Se observa que la altitud muestra una relación lineal, aunque los datos se desvían en cierto grado de la línea de tendencia. Lo mismo ocurre con el pH, mientras que la concentración de oxígeno parece seguir una tendencia más logarítmica que lineal. A diferencia de la altitud, la velocidad de corriente presenta una relación lineal positiva con el pH y la temperatura. En el caso de la altitud, los datos están más dispersos en relación con la línea de tendencia lineal, mientras que los del pH muestran menor dispersión respecto a esta.

En la relación entre el caudal y la materia orgánica total y particulada, se observa mayor dispersión en valores bajos de caudal, con un ajuste más claro en valores altos. En cambio, en la relación entre la variabilidad del caudal y la materia orgánica particulada, la dispersión aumenta a medida que la variabilidad del caudal es mayor. Aunque estas relaciones son, en general, claras al considerar todas las cuencas en conjunto, la situación se complica cuando se analizan individualmente. En algunas cuencas, una variable puede estar positivamente relacionada con otra, pero en otras puede ser negativa, como sucede con el caudal y la materia orgánica total.

En las cuencas de los ríos Siecha y Frío, estas variables se relacionan positivamente, mientras que en el resto de cuencas la relación es negativa (@fig-fig6). La velocidad de corriente se relaciona positivamente con el pH en todas las cuencas, así como la altitud y la temperatura mantienen una relación negativa en todas las cuencas. Las diiferencias en las relaciones entre cuencas puede ser debido al ruido generado por la falta de muestras en las cuencas.

```{r,message=FALSE, warning=FALSE, fig.height=7}
#| label: fig-fig5
#| fig-cap: Diagramas de dispersión de las relaciones moderadas y fuertes entre variables explicativas y físico-químicas.


g1 = ggplot(Datos, aes(x = altitud, y = temp)) + 
  geom_smooth(aes(x = altitud, y = temp), se = F, span = 0.7, col = "black") +
  geom_smooth(aes(x = altitud, y = temp), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "Temperatura (c°)")

g2 = ggplot(Datos, aes(x = altitud, y = `conc-O2`)) + 
  geom_smooth(aes(x = altitud, y = `conc-O2`), se = F, span = 0.7, col = "black") +
   geom_smooth(aes(x = altitud, y = `conc-O2`), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "Concentración (mg/l)")

g3 = ggplot(Datos, aes(x = altitud , y = pH)) + 
  geom_smooth(aes(x = altitud , y = pH), se = F, span = 0.7, col = "black") +
  geom_smooth(aes(x = altitud , y = pH), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "pH")

g4 = ggplot(Datos, aes(x = vel, y = temp)) + 
  geom_smooth(se = F, span = 0.7, col = "black") +
  geom_smooth(se = F, span = 0.7, col = "blue",method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Vel. de corriente (m/s)", y = "Temperatura (c°)")

g5 = ggplot(Datos, aes(x = vel, y = pH)) + 
  geom_smooth(se = F, span = 0.7, col = "black") +
  geom_smooth(se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Vel. de corriente (m/s)", y = "pH")

g6 = ggplot(Datos, aes(x = caudal, y = Motot)) + 
  geom_smooth(aes(x = caudal, y = Motot), se = F, span = 0.7, col = "black") +
   geom_smooth(aes(x =caudal, y = Motot), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Caudal (L/s)", y = "MOT (mg/l)")


g7 = ggplot(Datos, aes(x = caudal, y = MOP)) + 
  geom_smooth(aes(x = caudal, y = MOP), se = F, span = 0.7, col = "black") +
   geom_smooth(aes(x = caudal, y = MOP), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Caudal (L/s)", y = "MOP (mg/l)")

g8 = ggplot(Datos, aes(x = `var-caudal`, y = MOP)) + 
  geom_smooth(aes(x = `var-caudal`, y = MOP), se = F, span = 0.7, col = "black") +
  geom_smooth(aes(x = `var-caudal`, y = MOP), se = F, span = 0.7, col = "blue", method = "lm") +
  geom_point(aes(colour = Cuencas)) + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Var. Caudal (%)", y = "MOP (mg/l)")


# Combinar todos los gráficos con patchwork y compartir una única leyenda
(g1 + g2) / (g3 + g4 )/(g5 + g6)/(g7+g8) + plot_layout(guides = "collect")

```

```{r,message=FALSE, warning=FALSE, fig.height=7}
#| label: fig-fig6
#| fig-cap: Diagramas de dispersión de las relaciones moderadas y fuertes entre variables explicativas y físico-químicas por cada cuenca.

m1 = ggplot(Datos, aes(x = altitud, y = temp, colour = Cuencas)) + 
  geom_smooth(method = "lm",se = F, span = 1) +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "Temperatura (c°)")

m2 = ggplot(Datos, aes(x = altitud, y = `conc-O2`, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method = "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "Concentración (mg/l)")

m3 = ggplot(Datos, aes(x = altitud , y = pH, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method = "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Altitud (MSNM)", y = "pH")

m4 = ggplot(Datos, aes(x = vel, y = temp, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method = "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Vel. de corriente (m/s)", y = "Temperatura (c°)")

m5 = ggplot(Datos, aes(x = vel, y = pH, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method= "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Vel. de corriente (m/s)", y = "pH")

m6 = ggplot(Datos, aes(x = caudal, y = Motot, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method = "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Caudal (L/s)", y = "MOT (mg/l)")

m7 = ggplot(Datos, aes(x = caudal, y = MOP, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method= "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Caudal (L/s)", y = "MOP (mg/l)")

m8 = ggplot(Datos, aes(x = `var-caudal`, y = MOP, colour = Cuencas)) + 
  geom_smooth(se = F, span = 1, method= "lm") +
  geom_point() + 
  theme_classic() + 
  scale_color_manual(values = c("Av" = "#d73027", "Fr" = "#fc8d59","Ne" = "#1b95b8", "Si"="#5e0069","Su"="yellow","Teu"="#9f5602","Tu"="#1a9850")) +
  labs(x = "Var. Caudal (%)", y = "MOP (mg/l)")

# Combinar todos los gráficos con patchwork y compartir una única leyenda
(m1 + m2) / (m3 + m4)/(m5 + m6) / (m7 + m8)  + plot_layout(guides = "collect")


```

## **Objetivo 3:** Determinar las diferencias en los parámetros físicoquímicos en diferentes niveles de condiciones altitudinales e hidrométricas.

### Creación de variables agrupadoras

```{r}

Datos <-
  Datos %>% 
  mutate(clasealtitud = cut(altitud, c(2500,2800,3600), include.lowest = TRUE,
                         labels = c("alt.baja","alt.alta")), clasecuadal = cut(caudal, c(0,1,6), include.lowest = TRUE,labels = c("caudal.bajo", "caudal.alto")), clasevel = cut(vel,c(15,30,40,75),include.lowest = TRUE,labels = c("vel.baja","vel.media","vel.alta")), clasevar.cau = cut(`var-caudal`,seq(20,165,47.5), include.lowest = TRUE,labels = c("var.c.bajo", "var.c.medio","var.c.alto")))
```

### Resumen estadistico de las variables físico-químicas en diferentes niveles de las variables explicativas

```{r, message=FALSE,warning=FALSE}
#| label: tbl-tbl1
#| tbl-cap: "Ejemplo de resumen estadistico de la temperatura por los niveles de altura y velocidad de corriente."

datos_resum <- Datos %>%        # Base de datos resumida
  group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(temp), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(temp),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(temp),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(temp)/sqrt(n()),2))   # Error estándar de cada grupo
datos_resum %>% 
  kbl(caption = "", booktabs = F, longtable=T) %>% 
  kable_classic(full_width=F, html_font = "cambria")

datos_resum2 <- Datos %>%        # Base de datos resumida
  group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(pH), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(pH),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(pH),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(pH)/sqrt(n()),2))   # Error estándar de cada grupo



datos_resum3 <- Datos %>%        # Base de datos resumida
  group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(MOP), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(MOP),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(MOP),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(MOP)/sqrt(n()),2))   # Error estándar de cada grupo



datos_resum4 <- Datos %>%        # Base de datos resumida
  group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(Motot), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(Motot),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(Motot),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(Motot)/sqrt(n()),2))   # Error estándar de cada grupo


```

El gráfico (@fig-fig7) presenta comparaciones de varias variables ambientales (temperatura, pH, materia orgánica total - MOT, y materia orgánica particulada - MOP) en relación con los niveles de altura, caudal y velocidad de corriente (V.C.). En el primer gráfico, se observa que la temperatura aumenta levemente en las altitudes más altas a medida que se incrementa la velocidad de corriente, y estos cambios parecen ser significativos debido al poco solapamiento de las barras de error. En contraste, a niveles bajos de altitud, la temperatura disminuye ligeramente con el aumento de la velocidad de corriente, aunque este cambio no es significativo. El pH no parece verse afectado por los diferentes niveles de altitud o velocidad de corriente, mostrando una tendencia estable.

La materia orgánica total (MOT) aumenta conforme lo hacen los niveles de caudal y la variación del caudal, alcanzando sus valores más altos en un nivel intermedio de variación y un caudal alto. A niveles bajos de caudal, se observa una leve tendencia hacia valores más altos en niveles intermedios de variación de caudal, pero este patrón se intensifica en niveles altos de caudal.Por otro lado, la materia orgánica particulada (MOP) sigue un patrón similar en caudales bajos, pero en caudales altos aumenta a medida que se alcanza el nivel más alto de variación del caudal. Esto sugiere que la variación del caudal es un factor clave para el ingreso de materia orgánica en los ríos de la sabana de Bogotá.

```{r}
#| label: fig-fig7
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.

# Promedios y errores con colores automáticos (Figura p1)
p1<-
  ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
                position=position_dodge(.9)) +
  theme_classic()+
  labs(x="Nivel de VC", y ="pH", fill = "Nivel de altitud") +
  theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

# Figura con definición de colores por periodo (figura p2)
p2 <-
  ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
                position=position_dodge(.9)) +
  labs(x="Nivel de VC", y ="pH", fill = "Nivel de altitud") +
theme_classic() +
  scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
                position=position_dodge(.9)) +
  labs(x="Nivel de caudal", y ="MOT (mg/l)", fill = "v. de caudal") +
  theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
                position=position_dodge(.9)) +
  labs(x="Nivel de caudal", y ="MOP (mg/l)", fill = "v. de caudal") +
  theme_classic() +
  scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
 theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

(p1+p2)/(p3 + p4)
```

```{r, message=FALSE,warning=FALSE}
#| label: fig-fig8
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.


datos_resum <- Datos %>%        # Base de datos resumida
  group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(O2), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(O2),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(O2),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(O2)/sqrt(n()),2))   # Error estándar de cada grupo


datos_resum2 <- Datos %>%        # Base de datos resumida
  group_by(clasealtitud,clasevel) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(NH4), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(NH4),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(NH4),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(NH4)/sqrt(n()),2))   # Error estándar de cada grupo



datos_resum3 <- Datos %>%        # Base de datos resumida
  group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(Ptot), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(Ptot),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(Ptot),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(Ptot)/sqrt(n()),2))   # Error estándar de cada grupo


datos_resum4 <- Datos %>%        # Base de datos resumida
  group_by(clasecuadal,clasevar.cau) %>%          # Factor o variable agrupadora
  summarise(datos.m = round(mean(sólidos), 2),   # Media de cada grupo del factor
            datos.de  = round(sd(sólidos),2),   # Desviacioes estándar de cada grupo
            datos.var = round(var(sólidos),2),  # Varianzas de cada grupo
            n = n(),           # Tamaño de cada grupo
            datos.ee = round(sd(sólidos)/sqrt(n()),2))   # Error estándar de cada grupo


```
En la @fig-fig 9 se observa que en altitudes bajas el oxígeno disuelto es mayor cuando la velocidad de corriente es baja, pero disminuye notablemente a velocidades de corriente altas. En altitudes altas, por el contrario, el oxígeno disuelto aumenta conforme incrementa la velocidad de corriente. En cuanto a la concentración de amonio disminuyen claramente a medida que aumenta la altitud, siendo más altos en altitudes bajas y con velocidades de corriente bajas. Sin embargo, de manera general, la velocidad de corriente no parece influir significativamente en esta relación.

En cuanto al fósforo total, se evidencia una mayor concentración en los niveles más altos de caudal y variación de este. En caudales bajos, se observan menores concentraciones de fósforo, mientras que en tramos con bajos niveles de variación del caudal se presentan mayores concentraciones de fósforo disuelto en caudales bajos y menores concentraciones en caudales altos.

Las sustancias sólidas suspendidas muestran mayor dispersión en los niveles bajos y medios de variación del caudal cuando el caudal es bajo. En cambio, a medida que el caudal aumenta, la dispersión de estas sustancias disminuye, lo que sugiere que los valores tienden a estabilizarse en caudales altos. La variación del caudal parece influir en la cantidad de sustancias sólidas suspendidas, siendo mayor en niveles intermedios de variación de caudal.

```{r}
#| label: fig-fig9
#| fig-cap: Histogramas de resumen estadistico de las variables físico quimicas para comparar los niveles de las variables explicativas.


# Promedios y errores con colores automáticos (Figura p1)
p1<-
  ggplot(datos_resum, aes(x=clasevel, y=datos.m, fill= clasealtitud)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
                position=position_dodge(.9)) +
  theme_classic()+
  labs(x="Nivel de altura", y ="Oxígeno disuelto (mg/l)", fill = "Nivel de V.C") +
  theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

# Figura con definición de colores por periodo (figura p2)
p2 <-
  ggplot(datos_resum2, aes(x=clasevel, y=datos.m, fill= clasealtitud)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.2,
                position=position_dodge(.9)) +
  labs(x="Nivel de altura", y ="Amonio (mg/l)", fill = "Nivel de V.C") +
theme_classic() +
  scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

p3 <- ggplot(datos_resum3, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
                position=position_dodge(.9)) +
  labs(x="Nivel de caudal", y = "Fosforo total (mg/l)", fill = "v. de caudal") +
  theme_classic() +   theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

p4 <- ggplot(datos_resum4, aes(x=clasevar.cau, y=datos.m, fill= clasecuadal)) + 
  geom_bar(stat="identity", col="black", position=position_dodge()) +  
  geom_errorbar(aes(ymin=datos.m, ymax=datos.m+datos.ee),width=0.05,
                position=position_dodge(.9)) +
  labs(x="Nivel de caudal", y ="Sustancia sólida suspendida (vol. %)", fill = "v. de caudal") +
  theme_classic() +
  scale_fill_manual(values=c('#dfc27d','#f5f5f5',"#35978f")) +
 theme(axis.text.x = element_text(size=8, angle = 90),         # Tamaño del texto en eje X
        axis.title.x = element_text(size=10),       # Tamaño del título en eje X
        axis.title.y = element_text(size=10),       # Tamaño del título en eje Y
        legend.text = element_text(size=8),         # Tamaño del texto de la leyenda
        legend.title = element_text(size=9))        # Tamaño del título de la leyenda

(p1+p2)/(p3 + p4)
```
