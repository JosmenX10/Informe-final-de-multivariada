datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv,sep"= ";")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Pendiente,ejex = "Grupos",ejey="Pendiente")
ggboxplot(datos=datos_env,X = Grupos, Y = `Cobertura veg.`,
ejex = "Grupos",ejey="Cobertura vegetal")
ggboxplot(datos=datos_env,X = Grupos,
Y = `Riqueza sp` ,ejex = "Grupos", ejey="Riqueza de especies")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$pH ,ejex = "Grupos", ejey="pH")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$`P.del suelo`,ejex = "Grupos", ejey="Profundidad del suelo")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$`Orientación S-SE` ,ejex = "Grupos", ejey="Orientación S-SE")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$CCSE ,ejex = "Grupos", ejey="Indice de carga calorifica SE")+scale_y_continuous(limits = c(0,1.5))
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$CCSE ,ejex = "Grupos", ejey="Indice de carga calorifica SE")+scale_y_continuous(limits = c(0,1.5))
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv,sep"= ";")
datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv",sep= ";")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
View(datos_env)
datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv",sep= ",")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Pendiente,ejex = "Grupos",ejey="Pendiente")
ggboxplot(datos=datos_env,X = Grupos, Y = `Cobertura veg.`,
ejex = "Grupos",ejey="Cobertura vegetal")
ggboxplot(datos=datos_env,X = Grupos,
Y = `Riqueza sp` ,ejex = "Grupos", ejey="Riqueza de especies")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$pH ,ejex = "Grupos", ejey="pH")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$`P.del suelo`,ejex = "Grupos", ejey="Profundidad del suelo")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$`Orientación S-SE` ,ejex = "Grupos", ejey="Orientación S-SE")
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$CCSE ,ejex = "Grupos", ejey="Indice de carga calorifica SE")+scale_y_continuous(limits = c(0,1.5))
ggboxplot(datos=datos_env,X = Grupos,
Y = datos_env$`CCS-SE` ,ejex = "Grupos", ejey="Indice de carga calorifica S-SE")+scale_y_continuous(limits = c(0,1.5))
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
#se generan los colores
colores <- c("#a6d96a","#ca0020", "#c2a5cf",
"#92c5de")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T,fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Pendiente,ejex = "Grupos",ejey="Pendiente")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Pendiente,ejex = "Grupos",ejey="Pendiente")
ggboxplot(datos=datos_env,X = Grupos, Y = `Cobertura veg.`,
ejex = "Grupos",ejey="Cobertura vegetal")
ggboxplot(datos=datos_env,X = Grupos,
Y = `Riqueza sp` ,ejex = "Grupos", ejey="Riqueza de especies")
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
#se generan los colores
colores <- c("#a6d96a","#ca0020", "#c2a5cf","#92c5de")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, aes(fill = colores)) + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
#se generan los colores
colores <- c("#a6d96a","#ca0020", "#c2a5cf","#92c5de")
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de") ) + theme_classic() +
xlab(ejex) + ylab(ejey)}
datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv",sep = ",")
datos_sp = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/datos_bio.csv",sep = ",")
datos_sp <- datos_sp[,-1]
datos_sp
#caragamos libreria
library(vegan)
library(indicspecies)
datos_sp_pa <- decostand (datos_sp, method = 'pa') #Transformamos a datos de presencia ausencia
phi <- multipatt(datos_sp_pa, cluster = datos_env$Grupos, fun = 'r.g') #aplicamos la funcion para calcula la fidelidad de las especies
re <- phi$sign[phi$sign$p.value<=0.01,] #se filtran las especies que son significativas.
no_diag_sp <- rowSums (select(re, s.1, s.2, s.3, s.4))
re1<-re %>% arrange (no_diag_sp, desc (s.1), desc (s.2), desc (s.3), desc (s.4), desc (stat))
View(datos_sp_pa)
datos_sp_pa <- decostand (datos_sp, method = 'pa') #Transformamos a datos de presencia ausencia
phi <- multipatt(datos_sp_pa, cluster = datos_env$Grupos, fun = 'r.g') #aplicamos la funcion para calcula la fidelidad de las especies
re <- phi$sign[phi$sign$p.value<=0.01,] #se filtran las especies que son significativas.
no_diag_sp <- rowSums (select(re, s.1, s.2, s.3, s.4))
datos_env = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv",sep = ",")
datos_sp = read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/datos_bio.csv",sep = ",")
datos_sp <- datos_sp[,-1]
datos_sp
#caragamos libreria
library(vegan)
library(indicspecies)
datos_sp_pa <- decostand (datos_sp, method = 'pa') #Transformamos a datos de presencia ausencia
phi <- multipatt(datos_sp_pa, cluster = datos_env$Grupos, fun = 'r.g') #aplicamos la funcion para calcula la fidelidad de las especies
re <- phi$sign[phi$sign$p.value<=0.01,] #se filtran las especies que son significativas.
no_diag_sp <- rowSums (select(re, s.1, s.2, s.3, s.4))
no_diag_sp <- rowSums (select(re, s.1, s.2, s.3, s.4))
re1<-re %>% arrange (no_diag_sp, desc (s.1), desc (s.2), desc (s.3), desc (s.4), desc (stat))
library(tidyverse)
datos_sp_pa <- decostand (datos_sp, method = 'pa') #Transformamos a datos de presencia ausencia
phi <- multipatt(datos_sp_pa, cluster = datos_env$Grupos, fun = 'r.g') #aplicamos la funcion para calcula la fidelidad de las especies
re <- phi$sign[phi$sign$p.value<=0.01,] #se filtran las especies que son significativas.
no_diag_sp <- rowSums (select(re, s.1, s.2, s.3, s.4))
re1<-re %>% arrange (no_diag_sp, desc (s.1), desc (s.2), desc (s.3), desc (s.4), desc (stat))
summary(phi,indvalcomp = TRUE, alpha = 0.01)
require(ggplot2)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de") ) + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = colores) + theme_classic() +
xlab(ejex) + ylab(ejey)
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de") ) + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de")  + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot <- function(datos,X,Y,ejex,ejey) {
)
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de"))  + theme_classic() +
xlab(ejex) + ylab(ejey)}
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggplot(data = datos_env,aes(x= factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de"))  + theme_classic() +
xlab("ejex") + ylab("ejey")}
ggplot(data = datos_env,aes(x= factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de"))  + theme_classic() +
xlab("ejex") + ylab("ejey")
ggplot(data = datos_env,aes(x= factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(notch = T, fill = colores)  + theme_classic() +
xlab("ejex") + ylab("ejey")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T, fill = c("#a6d96a","#ca0020", "#c2a5cf","#92c5de"))  + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T))  + theme_classic() +
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) +
geom_boxplot(notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos,aes(x= factor(X),y=Y)) + geom_boxplot(notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggplot(data = datos) + geom_boxplot(aes(x= factor(X),y=Y), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
attach(datos_env)
ggboxplot(datos=datos_env,X = Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
attach(datos_env)
ggboxplot(datos=datos_env,X = datos_env$Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
View(datos_env)
ggplot(data = datos_env,aes(x= factor(datos_env$Grupos),y=Elevación)) +
geom_boxplot(notch = T, fill = colores)  + theme_classic() +
xlab("ejex") + ylab("ejey")
ggplot(data = datos_env,aes(x= factor(Grupos),y=Elevación)) +
geom_boxplot(notch = T, fill = colores)  + theme_classic() +
xlab("ejex") + ylab("ejey")
ggboxplot <- function(datos,X,Y,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(X), y=Y), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot(datos=datos_env,X = datos_env$Grupos,
Y = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
factor(X)
View(datos_env)
factor(datos_env$Grupos)
View(datos_sp)
View(datos_sp)
X
X
rm(X)
X
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(X), y=Y), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(vX), y=vY), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(vX), y=vY, fill = TRUE), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,X = Grupos,
Y = Pendiente,ejex = "Grupos",ejey="Pendiente")
ggboxplot(datos=datos_env,X = Grupos, Y = `Cobertura veg.`,
ejex = "Grupos",ejey="Cobertura vegetal")
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(vX), y=vY, fill = colores), notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(vX), y=vY,),fill=colores, notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
attach(datos_env)
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggboxplot(datos=datos_env,vX = Grupos,
vY = Elevación,ejex = "Grupos",ejey="Elevación(m.s.n.m)")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = Pendiente,ejeX = "Grupos",ejey="Pendiente")
ggbovXplot(datos=datos_env,vX = Grupos, Y = `Cobertura veg.`,
ejeX = "Grupos",ejey="Cobertura vegetal")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = `Riqueza sp` ,ejeX = "Grupos", ejey="Riqueza de especies")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = datos_env$pH ,ejeX = "Grupos", ejey="pH")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = datos_env$`P.del suelo`,ejeX = "Grupos", ejey="Profundidad del suelo")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = datos_env$`Orientación S-SE` ,ejeX = "Grupos", ejey="Orientación S-SE")
ggbovXplot(datos=datos_env,vX = Grupos,
Y = datos_env$CCSE ,ejeX = "Grupos", ejey="Indice de carga calorifica SE")+scale_y_continuous(limits = c(0,1.5))
ggbovXplot(datos=datos_env,vX = Grupos,
Y = datos_env$`CCS-SE` ,ejeX = "Grupos", ejey="Indice de carga calorifica S-SE")+scale_y_continuous(limits = c(0,1.5))
#Elegimos directorio
setwd(choose.dir())
#llamamos las librerias necesarias.
library(readxl)
library(dplyr)
library(ade4)
library(adespatial)
library(vegan)
library(gclus)
library(cluster)
library(pvclust)
library(RColorBrewer)
source("hcoplot.R")
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_env <- read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/vltava_env.csv,sep"= ";")
datos_bio <- read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/datos_bio.csv", sep =",")
datos_bio <- datos_bio[,-1]
#Se transpone la base de datos dejando las parcelas como filas
datos_bio <- datos[,-1]
datos_bio <- t(datos_bio)
colnames(datos_bio) <- datos$...1
datos_trans <- log1p(datos_bio)
dist_bio <- vegdist(datos_trans,method = "bray")
dist_bio_sqrt <- sqrt(dist_bio)
Cluster1 <- hclust(dist_bio_sqrt,method = "ward.D2")
plot(Cluster1, hang = -1)
View(datos_bio)
datos_bio <- read.delim("https://raw.githubusercontent.com/JosmenX10/Informe-final-de-multivariada/main/Base%20de%20datos%20y%20contextos/datos_bio.csv", sep =",")
View(datos_bio)
datos_bio <- datos_bio[,-1]
datos_trans <- log1p(datos_bio)
dist_bio <- vegdist(datos_trans,method = "bray")
dist_bio_sqrt <- sqrt(dist_bio)
Cluster1 <- hclust(dist_bio_sqrt,method = "ward.D2")
plot(Cluster1, hang = -1)
clus_ward_cut <- cutree (Cluster1, k = 4) # "cut the tree" - to which groups individual samples belong?
plot (clus_ward, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique (clus_ward_cut[clus_ward$order]) # make sure to know which box is which cluster!
rect.hclust (clus_ward, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:5), col = 1:5, pch = 22, bty = 'n')
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique (clus_ward_cut[clus_ward$order]) # make sure to know which box is which cluster!
rect.hclust (clus_ward, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:5), col = 1:5, pch = 22, bty = 'n')
clus_in_dendro <- unique(clus_ward_cut[clus_ward$order]) # make sure to know which box is which cluster!
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique(clus_ward_cut[Cluster1$order]) # make sure to know which box is which cluster!
rect.hclust (Cluster1, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:5), col = 1:5, pch = 22, bty = 'n')
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique(clus_ward_cut[Cluster1$order]) # make sure to know which box is which cluster!
rect.hclust (Cluster1, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:4), col = 1:4, pch = 22, bty = 'n')
clus_ward_cut <- cutree (Cluster1, k = 5) # "cut the tree" - to which groups individual samples belong?
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique(clus_ward_cut[Cluster1$order]) # make sure to know which box is which cluster!
rect.hclust (Cluster1, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:4), col = 1:4, pch = 22, bty = 'n')
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique(clus_ward_cut[Cluster1$order]) # make sure to know which box is which cluster!
rect.hclust (Cluster1, k = 4, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:5), col = 1:5, pch = 22, bty = 'n')
plot (Cluster1, cex = .5)  # argument cex reduced the size of the dendrogram leaf labels to make them readable
clus_in_dendro <- unique(clus_ward_cut[Cluster1$order]) # make sure to know which box is which cluster!
rect.hclust (Cluster1, k = 5, border = clus_in_dendro)
legend ('topleft', legend = paste ('Cluster', 1:5), col = 1:5, pch = 22, bty = 'n')
#se generan los colores
colores <- c("#a6d96a","#ca0020", "#c2a5cf","#92c5de","black")
require(ggplot2)
ggboxplot <- function(datos,vX,vY,ejex,ejey) {
ggplot(data = datos) + geom_boxplot(aes(x= factor(vX), y=vY,),fill=colores, notch = T)  + theme_classic() +
xlab(ejex) + ylab(ejey)}
x11()
